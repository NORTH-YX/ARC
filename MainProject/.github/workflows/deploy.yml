name: Deployment Workflow

on:
  push:
    branches: [ main, stage ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Backend
        working-directory: MtdrSpring/backend
        run: |
          chmod +x mvnw
          ./mvnw clean install

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: MtdrSpring/backend/src/main/frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: MtdrSpring/backend/src/main/frontend
        run: npm ci

      - name: Build Frontend
        working-directory: MtdrSpring/backend/src/main/frontend
        run: npm run build

  deploy:
    name: Deploy
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stage'
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and Push Docker Images
        working-directory: MtdrSpring
        run: |
          docker build -t backend:${{ github.sha }} ./backend
          docker build -t frontend:${{ github.sha }} ./backend/src/main/frontend
          # Add your Docker registry push commands here
          # docker push backend:${{ github.sha }}
          # docker push frontend:${{ github.sha }}

      - name: Deploy to Environment
        if: github.ref == 'refs/heads/stage'
        run: |
          # Add your staging deployment commands here
          echo "Deploying to staging environment"

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          # Add your production deployment commands here
          echo "Deploying to production environment" 