version: 0.1
component: build
timeoutInSeconds: 1800
shell: bash

steps:
  - type: Command
    name: "Install & Run ZAP"
    command: |
      # Instalar Java 17
      apt update
      apt install -y openjdk-17-jdk wget unzip
      export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
      export PATH=$JAVA_HOME/bin:$PATH

      # Instalar kubectl
      mkdir -p $HOME/.kube
      cd $HOME
      mkdir k8s
      cd k8s
      wget https://dl.k8s.io/v1.31.2/bin/linux/amd64/kubectl
      chmod +x kubectl
      mv kubectl /usr/local/bin/

      # Crear kubeconfig
      oci ce cluster create-kubeconfig --cluster-id ocid1.cluster.oc1.mx-queretaro-1.aaaaaaaayt4ltydknxnaxvp6gzsgh4sxzkstzoc65r4ppjo4ac54i5xmdcwa \
        --file $HOME/.kube/config \
        --region mx-queretaro-1 \
        --token-version 2.0.0 \
        --kube-endpoint PUBLIC_ENDPOINT

      export KUBECONFIG=$HOME/.kube/config

      # Esperar LoadBalancer
      echo "⏳ Esperando 30 segundos para IP..."
      sleep 30
      TARGET_IP=$(kubectl get svc --all-namespaces -o jsonpath='{.items[?(@.spec.type=="LoadBalancer")].status.loadBalancer.ingress[0].ip}')
      echo "✅ IP obtenida: $TARGET_IP"

      # Descargar e instalar OWASP ZAP
      cd /root
      mkdir zap
      cd zap
      wget https://github.com/zaproxy/zaproxy/releases/download/v2.16.1/ZAP_2.16.1_Linux.tar.gz
      tar -xvzf ZAP_2.16.1_Linux.tar.gz
      cd ZAP_2.16.1
      chmod +x zap.sh

      # Ejecutar escaneo
      ./zap.sh -cmd -quickurl http://$TARGET_IP -quickout /root/zap-report.html -quickprogress
